// Generated by CoffeeScript 1.10.0

/**
 * create by gitbong 2015/11/02
 * github:gitbong
 */

(function () {
	var gbVideo;

	gbVideo = (function () {
		gbVideo.prototype._evtMap = {};

		gbVideo.prototype.currTime = 0;

		gbVideo.prototype.totalTime = 0;

		gbVideo.prototype.progress = 0;

		function gbVideo(video) {
			var _this;
			this.video = video;
			_this = this;
			this.video.addEventListener('play', function (e) {
				return _this._trigger('play');
			});
			this.video.addEventListener('pause', function (e) {
				return _this._trigger('pause');
			});
			this.video.addEventListener('ended', function (e) {
				return _this._trigger('ended');
			});
			this.video.addEventListener('timeupdate', function (e) {
				_this.currentTime = e.target.currentTime;
				_this.progress = Math.floor(_this.currentTime * 100 / _this.totalTime) / 100;
				return _this._trigger('playing');
			});
			this.video.addEventListener('loadedmetadata', function (e) {
				_this.totalTime = e.target.duration;
				return _this._trigger('ready');
			});
		}

		gbVideo.prototype.play = function () {
			return this.video.play();
		};

		gbVideo.prototype.pause = function () {
			return this.video.pause();
		};

		gbVideo.prototype.gotoPlay = function (time) {
			this.video.currentTime = time;
			return this.play();
		};

		gbVideo.prototype.source = function (url) {
			return this.video.src = url;
		};

		gbVideo.prototype.on = function (evt, fn) {
			if (this._evtMap[evt] === void 0) {
				this._evtMap[evt] = [];
			}
			return this._evtMap[evt].push(fn);
		};

		gbVideo.prototype._trigger = function (evt, data) {
			var arr, evtObj, fn, i, j, len, results;
			if (data == null) {
				data = {};
			}
			arr = this._evtMap[evt];
			if (arr === void 0) {
				arr = [];
			}
			evtObj = {
				target: this
			};
			for (i in data) {
				if (i !== 'target') {
					evtObj[i] = data[i];
				}
			}
			results = [];
			for (j = 0, len = arr.length; j < len; j++) {
				fn = arr[j];
				if (typeof fn === "function") {
					results.push(fn(evtObj));
				} else {
					results.push(void 0);
				}
			}
			return results;
		};

		return gbVideo;

	})();

	window.gbVideo = gbVideo;

}).call(this);

//# sourceMappingURL=gbVideo.js.map
